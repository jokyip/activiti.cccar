<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://activiti.org/test">
  <collaboration id="Collaboration">
    <participant id="cccar" name="CCCAR" processRef="CCCAR"></participant>
  </collaboration>
  <process id="CCCAR" name="CCCAR" isExecutable="true">
    <laneSet id="laneSet_CCCAR">
      <lane id="cccar_issue" name="Issue">
        <flowNodeRef>startEvent</flowNodeRef>
        <flowNodeRef>taskIssue</flowNodeRef>
        <flowNodeRef>gatewayIssue</flowNodeRef>
        <flowNodeRef>endEventFromIssue</flowNodeRef>
        <flowNodeRef>startToIssue</flowNodeRef>
        <flowNodeRef>issueToEndorse</flowNodeRef>
        <flowNodeRef>issueToCancel</flowNodeRef>
        <flowNodeRef>issueToGateway</flowNodeRef>
      </lane>
      <lane id="cccar_endorse" name="Endorse">
        <flowNodeRef>taskEndorse</flowNodeRef>
        <flowNodeRef>gatewayEndorse</flowNodeRef>
        <flowNodeRef>endEventFromEndorse</flowNodeRef>
        <flowNodeRef>endorseToGateway</flowNodeRef>
        <flowNodeRef>endorseToApprove</flowNodeRef>
        <flowNodeRef>endorseToCancel</flowNodeRef>
        <flowNodeRef>endorseToIssue</flowNodeRef>
      </lane>
      <lane id="cccar_approve" name="Approve">
        <flowNodeRef>taskApprove</flowNodeRef>
        <flowNodeRef>endEvent</flowNodeRef>
        <flowNodeRef>gatewayApprove</flowNodeRef>
        <flowNodeRef>endEventFromApprove</flowNodeRef>
        <flowNodeRef>approveToCancel</flowNodeRef>
        <flowNodeRef>approveToComplete</flowNodeRef>
        <flowNodeRef>approveToGateway</flowNodeRef>
        <flowNodeRef>approveToIssue</flowNodeRef>
      </lane>
    </laneSet>
    <startEvent id="startEvent" name="Start"></startEvent>
    <userTask id="taskIssue" name="CCCAR - Issue" activiti:assignee="kermit">
      <extensionElements>
        <activiti:taskListener event="create" class="org.activiti.engine.impl.bpmn.listener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[def cccarServer = 'http://10.30.224.82:8030';
def orgchartAPI = "https://mob.myvnc.com/orgchart/api/user?email=";
def todoAPI = 'http://10.30.224.82:8010/api/todo'
def cccarAPI = "${cccarServer}/api/record";
def webhookAPI = "${cccarServer}/api/webhook";
task.setVariable('cccarServer',cccarServer);
task.setVariable('orgchartAPI',orgchartAPI);
task.setVariable('todoAPI',todoAPI);
task.setVariable('webhookAPI',webhookAPI);

def token = ['bash', '-c', "curl -X POST -k -u \"todomsgUATAuth:pass1234\" -d \"grant_type=password&username=todoadmin&password=pass1234&scope[]=https://mob.myvnc.com/org/users&scope[]=https://mob.myvnc.com/mobile\" https://mob.myvnc.com/org/oauth2/token/"].execute();
def slurper = new groovy.json.JsonSlurper();
def tokenresult = slurper.parseText(token.text);
println "CCCAR - Issue. Task created. Token: ${tokenresult.access_token}";
def url = "${cccarServer}/#/cccar/edit/${task.getVariable('cccarId')}";

if (!task.getVariable('cccarId')){
	def cccar = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"createdBy=${task.getVariable('createdBy')}&number=${task.getProcessInstanceId()}&nextAction=Issue\" ${cccarAPI}"].execute();
	def cccarresult = slurper.parseText(cccar.text);
	println "CCCAR - Issue. Task created. CCCAR create result: ${cccarresult}";
	cccar.waitFor();
	url = "${cccarServer}/#/cccar/edit/${cccarresult.id}";
	task.setVariable('cccarId',cccarresult.id);
}

def todo = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"task=${task.name}&ownedBy=${task.getVariable('createdBy')}&url=${url}&taskId=${task.id}&procInsId=${task.getProcessInstanceId()}&procCreateDate=${task.getVariable('createdAt').format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}&dateStart=${task.getCreateTime().format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}&type=activiti\" ${todoAPI}"].execute();
def todoresult = slurper.parseText(todo.text);
println "CCCAR - Issue. Task created. Todo create result: ${todoresult}";
todo.waitFor();

def webhook = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${task.getVariable('cccarId')}&event=Issue&method=put&callbackUrl=${todoAPI}/${todoresult.id}/complete&data=action%3dIssue\" ${webhookAPI}"].execute();
def webhookresult = slurper.parseText(webhook.text);
println "CCCAR - Issue. Task created. Webhook create result: ${webhookresult}";
webhook.waitFor();
def webhook2 = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${task.getVariable('cccarId')}&event=Withdraw&method=put&callbackUrl=${todoAPI}/${todoresult.id}/complete&data=action%3dWithdraw\" ${webhookAPI}"].execute();
def webhookresult2 = slurper.parseText(webhook2.text);
println "CCCAR - Issue. Task created. Webhook create result: ${webhookresult2}";
webhook2.waitFor();]]></activiti:string>
          </activiti:field>
          <activiti:field name="language">
            <activiti:string><![CDATA[groovy]]></activiti:string>
          </activiti:field>
        </activiti:taskListener>
      </extensionElements>
    </userTask>
    <exclusiveGateway id="gatewayIssue" name="IssueGateway"></exclusiveGateway>
    <endEvent id="endEventFromIssue" name="Cancel">
      <terminateEventDefinition></terminateEventDefinition>
    </endEvent>
    <userTask id="taskEndorse" name="CCCAR - Endorse" activiti:assignee="kermit">
      <extensionElements>
        <activiti:taskListener event="create" class="org.activiti.engine.impl.bpmn.listener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[def todoAPI = task.getVariable('todoAPI');
def cccarServer = task.getVariable('cccarServer');
def cccarAPI = "${cccarServer}/api/record/${task.getVariable('cccarId')}";
def url = "${cccarServer}/#/cccar/${task.getVariable('cccarId')}";
def webhookAPI = "${cccarServer}/api/webhook";
			
def token = ['bash', '-c', "curl -X POST -k -u \"todomsgUATAuth:pass1234\" -d \"grant_type=password&username=todoadmin&password=pass1234&scope[]=https://mob.myvnc.com/org/users&scope[]=https://mob.myvnc.com/mobile\" https://mob.myvnc.com/org/oauth2/token/"].execute();
def slurper = new groovy.json.JsonSlurper();
def tokenresult = slurper.parseText(token.text);
println "CCCAR - Endorse. Task created. Token: ${tokenresult.access_token}";

def todo = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"task=${task.name}&ownedBy=${task.getVariable('ro')}&url=${url}&taskId=${task.id}&procInsId=${task.getProcessInstanceId()}&procCreateDate=${task.getVariable('createdAt').format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}&dateStart=${task.getCreateTime().format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}&type=activiti\" ${todoAPI}"].execute();
def todoresult = slurper.parseText(todo.text);
println "CCCAR - Endorse. Task created. Todo create result: ${todoresult}";
todo.waitFor();

def webhook = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${task.getVariable('cccarId')}&event=Endorse&method=put&callbackUrl=${todoAPI}/${todoresult.id}/complete&data=action%3dEndorse\" ${webhookAPI}"].execute();
def webhookresult = slurper.parseText(webhook.text);
println "CCCAR - Endorse. Task created. Webhook create result: ${webhookresult}";
webhook.waitFor();
def webhook2 = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${task.getVariable('cccarId')}&event=Withdraw&method=put&callbackUrl=${todoAPI}/${todoresult.id}/complete&data=action%3dWithdraw\" ${webhookAPI}"].execute();
def webhookresult2 = slurper.parseText(webhook2.text);
println "CCCAR - Endorse. Task created. Webhook create result: ${webhookresult2}";
webhook2.waitFor();
def webhook3 = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${task.getVariable('cccarId')}&event=Reject&method=put&callbackUrl=${todoAPI}/${todoresult.id}/complete&data=action%3dReject\" ${webhookAPI}"].execute();
def webhookresult3 = slurper.parseText(webhook3.text);
println "CCCAR - Endorse. Task created. Webhook create result: ${webhookresult3}";
webhook3.waitFor();]]></activiti:string>
          </activiti:field>
          <activiti:field name="language">
            <activiti:string><![CDATA[groovy]]></activiti:string>
          </activiti:field>
        </activiti:taskListener>
      </extensionElements>
    </userTask>
    <exclusiveGateway id="gatewayEndorse" name="EndorseGateway"></exclusiveGateway>
    <endEvent id="endEventFromEndorse" name="Cancel">
      <terminateEventDefinition></terminateEventDefinition>
    </endEvent>
    <userTask id="taskApprove" name="CCCAR - Approve" activiti:assignee="kermit">
      <extensionElements>
        <activiti:taskListener event="create" class="org.activiti.engine.impl.bpmn.listener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[def todoAPI = task.getVariable('todoAPI');
def cccarServer = task.getVariable('cccarServer');
def cccarAPI = "${cccarServer}/api/record/${task.getVariable('cccarId')}";
def url = "${cccarServer}/#/cccar/${task.getVariable('cccarId')}";
def webhookAPI = "${cccarServer}/api/webhook";

def token = ['bash', '-c', "curl -X POST -k -u \"todomsgUATAuth:pass1234\" -d \"grant_type=password&username=todoadmin&password=pass1234&scope[]=https://mob.myvnc.com/org/users&scope[]=https://mob.myvnc.com/mobile\" https://mob.myvnc.com/org/oauth2/token/"].execute();
def slurper = new groovy.json.JsonSlurper();
def tokenresult = slurper.parseText(token.text);
println "CCCAR - Approve. Task created. Token: ${tokenresult.access_token}";

def todo = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"task=${task.name}&ownedBy=${task.getVariable('ao')}&url=${url}&taskId=${task.id}&procInsId=${task.getProcessInstanceId()}&procCreateDate=${task.getVariable('createdAt').format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}&dateStart=${task.getCreateTime().format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}&type=activiti\" ${todoAPI}"].execute();
def todoresult = slurper.parseText(todo.text);
println "CCCAR - Approve. Task created. Todo create result: ${todoresult}";
todo.waitFor();

def webhook = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${task.getVariable('cccarId')}&event=Approve&method=put&callbackUrl=${todoAPI}/${todoresult.id}/complete&data=action%3dApprove\" ${webhookAPI}"].execute();
def webhookresult = slurper.parseText(webhook.text);
println "CCCAR - Approve. Task created. Webhook create result: ${webhookresult}";
webhook.waitFor();
def webhook2 = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${task.getVariable('cccarId')}&event=Withdraw&method=put&callbackUrl=${todoAPI}/${todoresult.id}/complete&data=action%3dWithdraw\" ${webhookAPI}"].execute();
def webhookresult2 = slurper.parseText(webhook2.text);
println "CCCAR - Approve. Task created. Webhook create result: ${webhookresult2}";
webhook2.waitFor();
def webhook3 = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${task.getVariable('cccarId')}&event=Reject&method=put&callbackUrl=${todoAPI}/${todoresult.id}/complete&data=action%3dReject\" ${webhookAPI}"].execute();
def webhookresult3 = slurper.parseText(webhook3.text);
println "CCCAR - Approve. Task created. Webhook create result: ${webhookresult3}";
webhook3.waitFor();]]></activiti:string>
          </activiti:field>
          <activiti:field name="language">
            <activiti:string><![CDATA[groovy]]></activiti:string>
          </activiti:field>
        </activiti:taskListener>
      </extensionElements>
    </userTask>
    <endEvent id="endEvent" name="Complete"></endEvent>
    <exclusiveGateway id="gatewayApprove" name="ApproveGateway"></exclusiveGateway>
    <endEvent id="endEventFromApprove" name="Cancel">
      <terminateEventDefinition></terminateEventDefinition>
    </endEvent>
    <sequenceFlow id="startToIssue" sourceRef="startEvent" targetRef="taskIssue"></sequenceFlow>
    <sequenceFlow id="endorseToGateway" sourceRef="taskEndorse" targetRef="gatewayEndorse"></sequenceFlow>
    <sequenceFlow id="approveToCancel" name="Withdraw" sourceRef="gatewayApprove" targetRef="endEventFromApprove">
	  <extensionElements>
        <activiti:executionListener event="start" class="org.activiti.engine.impl.bpmn.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[execution.setVariable('nextHandler','');
def cccarServer = execution.getVariable('cccarServer');
def cccarAPI = "${cccarServer}/api/record/${execution.getVariable('cccarId')}";
def historyAPI = "${cccarServer}/api/history";
			
def token = ['bash', '-c', "curl -X POST -k -u \"todomsgUATAuth:pass1234\" -d \"grant_type=password&username=todoadmin&password=pass1234&scope[]=https://mob.myvnc.com/org/users&scope[]=https://mob.myvnc.com/mobile\" https://mob.myvnc.com/org/oauth2/token/"].execute();
def slurper = new groovy.json.JsonSlurper();
def tokenresult = slurper.parseText(token.text);
println "CCCAR - Withdrawn. Execution completed. Token: ${tokenresult.access_token}";

def cccar = ['bash', '-c', "curl -X PUT -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"nextHandler=''&status=Withdrawn&nextAction=''\" ${cccarAPI}"].execute();
def cccarresult = slurper.parseText(cccar.text);
println "CCCAR - Withdrawn. Execution completed. CCCAR update result: ${cccarresult}";
cccar.waitFor();

def history = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${execution.getVariable('cccarId')}&msg=Withdrawn by ${completedBy.username} on &msgAt=${new Date().format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}\" ${historyAPI}"].execute();
def historyresult = slurper.parseText(history.text);
println "CCCAR - Endorse. Execution completed. CCCAR history create result: ${historyresult}";
history.waitFor();]]></activiti:string>
          </activiti:field>
          <activiti:field name="language">
            <activiti:string><![CDATA[groovy]]></activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${action.equals('Withdraw')}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="approveToComplete" name="Approve" sourceRef="gatewayApprove" targetRef="endEvent">
      <extensionElements>
        <activiti:executionListener event="start" class="org.activiti.engine.impl.bpmn.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[execution.setVariable('nextHandler','');
def cccarServer = execution.getVariable('cccarServer');
def cccarAPI = "${cccarServer}/api/record/${execution.getVariable('cccarId')}";
def historyAPI = "${cccarServer}/api/history";
			
def token = ['bash', '-c', "curl -X POST -k -u \"todomsgUATAuth:pass1234\" -d \"grant_type=password&username=todoadmin&password=pass1234&scope[]=https://mob.myvnc.com/org/users&scope[]=https://mob.myvnc.com/mobile\" https://mob.myvnc.com/org/oauth2/token/"].execute();
def slurper = new groovy.json.JsonSlurper();
def tokenresult = slurper.parseText(token.text);
println "CCCAR - Approve. Execution completed. Token: ${tokenresult.access_token}";

def cccar = ['bash', '-c', "curl -X PUT -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"nextHandler=''&status=Approved&nextAction=''\" ${cccarAPI}"].execute();
def cccarresult = slurper.parseText(cccar.text);
println "CCCAR - Approve. Execution completed. CCCAR update result: ${cccarresult}";
cccar.waitFor();

def history = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${execution.getVariable('cccarId')}&msg=Approved by ${completedBy.username} on &msgAt=${new Date().format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}\" ${historyAPI}"].execute();
def historyresult = slurper.parseText(history.text);
println "CCCAR - Endorse. Execution completed. CCCAR history create result: ${historyresult}";
history.waitFor();]]></activiti:string>
          </activiti:field>
          <activiti:field name="language">
            <activiti:string><![CDATA[groovy]]></activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${action.equals('Approve')}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="approveToGateway" sourceRef="taskApprove" targetRef="gatewayApprove"></sequenceFlow>
    <sequenceFlow id="endorseToApprove" name="Endorse" sourceRef="gatewayEndorse" targetRef="taskApprove">
      <extensionElements>
        <activiti:executionListener event="start" class="org.activiti.engine.impl.bpmn.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[def orgchartAPI = "${execution.getVariable('orgchartAPI')}${completedBy.email}";
def cccarServer = execution.getVariable('cccarServer');
def cccarAPI = "${cccarServer}/api/record/${execution.getVariable('cccarId')}";
def historyAPI = "${cccarServer}/api/history";

def myInfo = ['bash', '-c', "curl -X GET -k ${orgchartAPI}"].execute();
def slurper = new groovy.json.JsonSlurper();
def me = slurper.parseText(myInfo.text);
println "CCCAR - Endorse. Execution completed. My details: ${me}";
myInfo.waitFor();
def nextHandler = me[0].supervisor.username
execution.setVariable('ao',nextHandler);
execution.setVariable('nextHandler',nextHandler);

def token = ['bash', '-c', "curl -X POST -k -u \"todomsgUATAuth:pass1234\" -d \"grant_type=password&username=todoadmin&password=pass1234&scope[]=https://mob.myvnc.com/org/users&scope[]=https://mob.myvnc.com/mobile\" https://mob.myvnc.com/org/oauth2/token/"].execute();
def tokenresult = slurper.parseText(token.text);
println "CCCAR - Endorse. Execution completed. Token: ${tokenresult.access_token}";

def cccar = ['bash', '-c', "curl -X PUT -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"nextHandler=${nextHandler}&nextAction=Approve&status=Pending Approval\" ${cccarAPI}"].execute();
def cccarresult = slurper.parseText(cccar.text);
println "CCCAR - Endorse. Execution completed. CCCAR update result: ${cccarresult}";
cccar.waitFor();

def history = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${execution.getVariable('cccarId')}&msg=Endorsed by ${completedBy.username} on &msgAt=${new Date().format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}\" ${historyAPI}"].execute();
def historyresult = slurper.parseText(history.text);
println "CCCAR - Endorse. Execution completed. CCCAR history create result: ${historyresult}";
history.waitFor();]]></activiti:string>
          </activiti:field>
          <activiti:field name="language">
            <activiti:string><![CDATA[groovy]]></activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${action.equals('Endorse')}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="endorseToCancel" name="Withdraw" sourceRef="gatewayEndorse" targetRef="endEventFromEndorse">
	  <extensionElements>
        <activiti:executionListener event="start" class="org.activiti.engine.impl.bpmn.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[execution.setVariable('nextHandler','');
def cccarServer = execution.getVariable('cccarServer');
def cccarAPI = "${cccarServer}/api/record/${execution.getVariable('cccarId')}";
def historyAPI = "${cccarServer}/api/history";
			
def token = ['bash', '-c', "curl -X POST -k -u \"todomsgUATAuth:pass1234\" -d \"grant_type=password&username=todoadmin&password=pass1234&scope[]=https://mob.myvnc.com/org/users&scope[]=https://mob.myvnc.com/mobile\" https://mob.myvnc.com/org/oauth2/token/"].execute();
def slurper = new groovy.json.JsonSlurper();
def tokenresult = slurper.parseText(token.text);
println "CCCAR - Withdrawn. Execution completed. Token: ${tokenresult.access_token}";

def cccar = ['bash', '-c', "curl -X PUT -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"nextHandler=''&status=Withdrawn&nextAction=''\" ${cccarAPI}"].execute();
def cccarresult = slurper.parseText(cccar.text);
println "CCCAR - Withdrawn. Execution completed. CCCAR update result: ${cccarresult}";
cccar.waitFor();

def history = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${execution.getVariable('cccarId')}&msg=Withdrawn by ${completedBy.username} on &msgAt=${new Date().format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}\" ${historyAPI}"].execute();
def historyresult = slurper.parseText(history.text);
println "CCCAR - Endorse. Execution completed. CCCAR history create result: ${historyresult}";
history.waitFor();]]></activiti:string>
          </activiti:field>
          <activiti:field name="language">
            <activiti:string><![CDATA[groovy]]></activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${action.equals('Withdraw')}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="endorseToIssue" name="Reject" sourceRef="gatewayEndorse" targetRef="taskIssue">
	  <extensionElements>
        <activiti:executionListener event="start" class="org.activiti.engine.impl.bpmn.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[execution.setVariable('nextHandler',execution.getVariable('createdBy'));
def cccarServer = execution.getVariable('cccarServer');
def cccarAPI = "${cccarServer}/api/record/${execution.getVariable('cccarId')}";
def historyAPI = "${cccarServer}/api/history";
			
def token = ['bash', '-c', "curl -X POST -k -u \"todomsgUATAuth:pass1234\" -d \"grant_type=password&username=todoadmin&password=pass1234&scope[]=https://mob.myvnc.com/org/users&scope[]=https://mob.myvnc.com/mobile\" https://mob.myvnc.com/org/oauth2/token/"].execute();
def slurper = new groovy.json.JsonSlurper();
def tokenresult = slurper.parseText(token.text);
println "CCCAR - Rejected. Execution completed. Token: ${tokenresult.access_token}";

def cccar = ['bash', '-c', "curl -X PUT -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"nextHandler=${execution.getVariable('createdBy')}&status=Draft&nextAction=Issue\" ${cccarAPI}"].execute();
def cccarresult = slurper.parseText(cccar.text);
println "CCCAR - Rejected. Execution completed. CCCAR update result: ${cccarresult}";
cccar.waitFor();

def history = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${execution.getVariable('cccarId')}&msg=Rejected by ${completedBy.username} on &msgAt=${new Date().format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}\" ${historyAPI}"].execute();
def historyresult = slurper.parseText(history.text);
println "CCCAR - Endorse. Execution completed. CCCAR history create result: ${historyresult}";
history.waitFor();]]></activiti:string>
          </activiti:field>
          <activiti:field name="language">
            <activiti:string><![CDATA[groovy]]></activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${action.equals('Reject')}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="issueToEndorse" name="Issue" sourceRef="gatewayIssue" targetRef="taskEndorse">
      <extensionElements>
        <activiti:executionListener event="start" class="org.activiti.engine.impl.bpmn.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[def orgchartAPI = "${execution.getVariable('orgchartAPI')}${completedBy.email}";
def cccarServer = execution.getVariable('cccarServer');
def cccarAPI = "${cccarServer}/api/record/${execution.getVariable('cccarId')}";
def historyAPI = "${cccarServer}/api/history";

def myInfo = ['bash', '-c', "curl -X GET -k ${orgchartAPI}"].execute();
def slurper = new groovy.json.JsonSlurper();
def me = slurper.parseText(myInfo.text);
println "CCCAR - Issue. Execution completed. My details: ${me}";
myInfo.waitFor();
def nextHandler = me[0].supervisor.username
execution.setVariable('ro',nextHandler);
execution.setVariable('nextHandler',nextHandler);

def token = ['bash', '-c', "curl -X POST -k -u \"todomsgUATAuth:pass1234\" -d \"grant_type=password&username=todoadmin&password=pass1234&scope[]=https://mob.myvnc.com/org/users&scope[]=https://mob.myvnc.com/mobile\" https://mob.myvnc.com/org/oauth2/token/"].execute();
def tokenresult = slurper.parseText(token.text);
println "CCCAR - Issue. Execution completed. Token: ${tokenresult.access_token}";

def cccar = ['bash', '-c', "curl -X PUT -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"nextHandler=${nextHandler}&nextAction=Endorse&status=Pending Endorsement\" ${cccarAPI}"].execute();
def cccarresult = slurper.parseText(cccar.text);
println "CCCAR - Issue. Execution completed. CCCAR update result: ${cccarresult}";
cccar.waitFor();

def history = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${execution.getVariable('cccarId')}&msg=Issued by ${completedBy.username} on &msgAt=${new Date().format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}\" ${historyAPI}"].execute();
def historyresult = slurper.parseText(history.text);
println "CCCAR - Issue. Execution completed. CCCAR history create result: ${historyresult}";
history.waitFor();]]></activiti:string>
          </activiti:field>
          <activiti:field name="language">
            <activiti:string><![CDATA[groovy]]></activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${action.equals('Issue')}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="issueToCancel" name="Withdraw" sourceRef="gatewayIssue" targetRef="endEventFromIssue">
	  <extensionElements>
        <activiti:executionListener event="start" class="org.activiti.engine.impl.bpmn.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[
execution.setVariable('nextHandler','');
def cccarServer = execution.getVariable('cccarServer');
def cccarAPI = "${cccarServer}/api/record/${execution.getVariable('cccarId')}";
def historyAPI = "${cccarServer}/api/history";
			
def token = ['bash', '-c', "curl -X POST -k -u \"todomsgUATAuth:pass1234\" -d \"grant_type=password&username=todoadmin&password=pass1234&scope[]=https://mob.myvnc.com/org/users&scope[]=https://mob.myvnc.com/mobile\" https://mob.myvnc.com/org/oauth2/token/"].execute();
def slurper = new groovy.json.JsonSlurper();
def tokenresult = slurper.parseText(token.text);
println "CCCAR - Withdrawn. Execution completed. Token: ${tokenresult.access_token}";

def cccar = ['bash', '-c', "curl -X PUT -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"nextHandler=''&status=Withdrawn&nextAction=''\" ${cccarAPI}"].execute();
def cccarresult = slurper.parseText(cccar.text);
println "CCCAR - Withdrawn. Execution completed. CCCAR update result: ${cccarresult}";
cccar.waitFor();

def history = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${execution.getVariable('cccarId')}&msg=Withdrawn by ${completedBy.username} on &msgAt=${new Date().format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}\" ${historyAPI}"].execute();
def historyresult = slurper.parseText(history.text);
println "CCCAR - Endorse. Execution completed. CCCAR history create result: ${historyresult}";
history.waitFor();]]></activiti:string>
          </activiti:field>
          <activiti:field name="language">
            <activiti:string><![CDATA[groovy]]></activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${action.equals('Withdraw')}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="issueToGateway" sourceRef="taskIssue" targetRef="gatewayIssue"></sequenceFlow>
    <sequenceFlow id="approveToIssue" name="Reject" sourceRef="gatewayApprove" targetRef="taskIssue">
	  <extensionElements>
        <activiti:executionListener event="start" class="org.activiti.engine.impl.bpmn.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[execution.setVariable('nextHandler',execution.getVariable('createdBy'));
def cccarServer = execution.getVariable('cccarServer');
def cccarAPI = "${cccarServer}/api/record/${execution.getVariable('cccarId')}";
def historyAPI = "${cccarServer}/api/history";
			
def token = ['bash', '-c', "curl -X POST -k -u \"todomsgUATAuth:pass1234\" -d \"grant_type=password&username=todoadmin&password=pass1234&scope[]=https://mob.myvnc.com/org/users&scope[]=https://mob.myvnc.com/mobile\" https://mob.myvnc.com/org/oauth2/token/"].execute();
def slurper = new groovy.json.JsonSlurper();
def tokenresult = slurper.parseText(token.text);
println "CCCAR - Rejected. Execution completed. Token: ${tokenresult.access_token}";

def cccar = ['bash', '-c', "curl -X PUT -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"nextHandler=${execution.getVariable('createdBy')}&status=Draft&nextAction=Issue\" ${cccarAPI}"].execute();
def cccarresult = slurper.parseText(cccar.text);
println "CCCAR - Rejected. Execution completed. CCCAR update result: ${cccarresult}";
cccar.waitFor();

def history = ['bash', '-c', "curl -X POST -k -H \"Authorization:Bearer ${tokenresult.access_token}\" -d \"cccarId=${execution.getVariable('cccarId')}&msg=Rejected by ${completedBy.username} on &msgAt=${new Date().format('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'', TimeZone.getTimeZone('UTC'))}\" ${historyAPI}"].execute();
def historyresult = slurper.parseText(history.text);
println "CCCAR - Endorse. Execution completed. CCCAR history create result: ${historyresult}";
history.waitFor();]]></activiti:string>
          </activiti:field>
          <activiti:field name="language">
            <activiti:string><![CDATA[groovy]]></activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${action.equals('Reject')}]]></conditionExpression>
    </sequenceFlow>
  </process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_Collaboration">
    <bpmndi:BPMNPlane bpmnElement="Collaboration" id="BPMNPlane_Collaboration">
      <bpmndi:BPMNShape bpmnElement="cccar" id="BPMNShape_cccar">
        <omgdc:Bounds height="829.0" width="801.0" x="50.0" y="25.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="cccar_issue" id="BPMNShape_cccar_issue">
        <omgdc:Bounds height="297.0" width="771.0" x="80.0" y="25.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="startEvent" id="BPMNShape_startEvent">
        <omgdc:Bounds height="30.0" width="30.0" x="137.0" y="45.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="taskIssue" id="BPMNShape_taskIssue">
        <omgdc:Bounds height="80.0" width="100.0" x="356.0" y="105.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="gatewayIssue" id="BPMNShape_gatewayIssue">
        <omgdc:Bounds height="40.0" width="40.0" x="384.0" y="225.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endEventFromIssue" id="BPMNShape_endEventFromIssue">
        <omgdc:Bounds height="28.0" width="28.0" x="585.0" y="231.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="cccar_endorse" id="BPMNShape_cccar_endorse">
        <omgdc:Bounds height="250.0" width="771.0" x="80.0" y="322.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="taskEndorse" id="BPMNShape_taskEndorse">
        <omgdc:Bounds height="80.0" width="100.0" x="354.0" y="360.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="gatewayEndorse" id="BPMNShape_gatewayEndorse">
        <omgdc:Bounds height="40.0" width="40.0" x="384.0" y="480.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endEventFromEndorse" id="BPMNShape_endEventFromEndorse">
        <omgdc:Bounds height="28.0" width="28.0" x="585.0" y="486.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="cccar_approve" id="BPMNShape_cccar_approve">
        <omgdc:Bounds height="282.0" width="771.0" x="80.0" y="572.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="taskApprove" id="BPMNShape_taskApprove">
        <omgdc:Bounds height="80.0" width="100.0" x="354.0" y="615.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endEvent" id="BPMNShape_endEvent">
        <omgdc:Bounds height="28.0" width="28.0" x="780.0" y="810.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="gatewayApprove" id="BPMNShape_gatewayApprove">
        <omgdc:Bounds height="40.0" width="40.0" x="384.0" y="735.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endEventFromApprove" id="BPMNShape_endEventFromApprove">
        <omgdc:Bounds height="28.0" width="28.0" x="585.0" y="741.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge bpmnElement="approveToCancel" id="BPMNEdge_approveToCancel">
        <omgdi:waypoint x="424.0" y="755.0"></omgdi:waypoint>
        <omgdi:waypoint x="585.0" y="755.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="approveToComplete" id="BPMNEdge_approveToComplete">
        <omgdi:waypoint x="404.0" y="775.0"></omgdi:waypoint>
        <omgdi:waypoint x="404.0" y="824.0"></omgdi:waypoint>
        <omgdi:waypoint x="780.0" y="824.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="endorseToApprove" id="BPMNEdge_endorseToApprove">
        <omgdi:waypoint x="404.0" y="520.0"></omgdi:waypoint>
        <omgdi:waypoint x="404.0" y="615.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="issueToEndorse" id="BPMNEdge_issueToEndorse">
        <omgdi:waypoint x="404.0" y="265.0"></omgdi:waypoint>
        <omgdi:waypoint x="404.0" y="360.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="issueToCancel" id="BPMNEdge_issueToCancel">
        <omgdi:waypoint x="424.0" y="245.0"></omgdi:waypoint>
        <omgdi:waypoint x="585.0" y="245.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="approveToGateway" id="BPMNEdge_approveToGateway">
        <omgdi:waypoint x="404.0" y="695.0"></omgdi:waypoint>
        <omgdi:waypoint x="404.0" y="735.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="approveToIssue" id="BPMNEdge_approveToIssue">
        <omgdi:waypoint x="384.0" y="755.0"></omgdi:waypoint>
        <omgdi:waypoint x="248.0" y="755.0"></omgdi:waypoint>
        <omgdi:waypoint x="248.0" y="145.0"></omgdi:waypoint>
        <omgdi:waypoint x="356.0" y="145.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="startToIssue" id="BPMNEdge_startToIssue">
        <omgdi:waypoint x="167.0" y="60.0"></omgdi:waypoint>
        <omgdi:waypoint x="406.0" y="60.0"></omgdi:waypoint>
        <omgdi:waypoint x="406.0" y="105.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="endorseToCancel" id="BPMNEdge_endorseToCancel">
        <omgdi:waypoint x="424.0" y="500.0"></omgdi:waypoint>
        <omgdi:waypoint x="585.0" y="500.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="issueToGateway" id="BPMNEdge_issueToGateway">
        <omgdi:waypoint x="405.2" y="185.0"></omgdi:waypoint>
        <omgdi:waypoint x="404.3921568627451" y="225.3921568627451"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="endorseToIssue" id="BPMNEdge_endorseToIssue">
        <omgdi:waypoint x="384.0" y="500.0"></omgdi:waypoint>
        <omgdi:waypoint x="278.0" y="500.0"></omgdi:waypoint>
        <omgdi:waypoint x="278.0" y="145.0"></omgdi:waypoint>
        <omgdi:waypoint x="356.0" y="145.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="endorseToGateway" id="BPMNEdge_endorseToGateway">
        <omgdi:waypoint x="404.0" y="440.0"></omgdi:waypoint>
        <omgdi:waypoint x="404.0" y="480.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</definitions>